// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth/logout": {
            "post": {
                "description": "Деавторизация пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "LogOut",
                "operationId": "log-out",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/tokens": {
            "get": {
                "description": "Получение пары токенов для указанного GUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "GetTokens",
                "operationId": "get-tokens",
                "parameters": [
                    {
                        "type": "string",
                        "example": "01ecfeac-5006-4af3-8961-fb5d3d7b142f",
                        "description": "user guid",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TokensResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/tokens/refresh": {
            "post": {
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "description": "Обновление токенов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "RefreshTokens",
                "operationId": "refresh-tokens",
                "parameters": [
                    {
                        "description": "user tokens",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.TokensRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TokensResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/user": {
            "get": {
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "description": "Получение GUID пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "GetGuid",
                "operationId": "get-guid",
                "parameters": [
                    {
                        "description": "user tokens",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.TokensRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.GuidResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/webhook": {
            "post": {
                "description": "Пример обработки вебхука",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "utils"
                ],
                "summary": "Webhook",
                "operationId": "webhook",
                "parameters": [
                    {
                        "description": "user guid",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.Payload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status",
                        "schema": {
                            "$ref": "#/definitions/handlers.WebhookResponse"
                        }
                    },
                    "default": {
                        "description": "status",
                        "schema": {
                            "$ref": "#/definitions/handlers.WebhookResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Переданы некорректные данные"
                }
            }
        },
        "handlers.GuidResponse": {
            "type": "object",
            "properties": {
                "guid": {
                    "type": "string",
                    "example": "01ecfeac-5006-4af3-8961-fb5d3d7b142f"
                },
                "message": {
                    "type": "string",
                    "example": "GUID получен"
                }
            }
        },
        "handlers.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Успешный выход из аккаунта"
                }
            }
        },
        "handlers.Payload": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "integer",
                    "example": 111
                },
                "guid": {
                    "type": "string",
                    "example": "01ecfeac-5006-4af3-8961-fb5d3d7b142f"
                },
                "info": {
                    "type": "string",
                    "example": "192.168.0.1"
                }
            }
        },
        "handlers.TokensRequest": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "MDE5N2VhZGQtZGQxMC03MDE4LTg4ZWYtODc5N2EzNGIxMjk3"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJmaW5nZXJwcmludCI6IlBvc3RtYW5SdW50aW1lLzcuNDQuMSIsImlwIjoiMTcyLjE4LjAuMTo0NDU2OCIsIlBhaXJJZCI6IklFbjdHZEZ2dm1BNXo3M3giLCJpc3MiOiJhdXRoLmxvY2FsaG9zdDo4MDgwIiwic3ViIjoiMDFlY2ZlYWMtNTAwNi00YWYzLTg5NjEtZmI1ZDNkN2IxNDJmIiwiYXVkIjpbImxvY2FsaG9zdDo4MDgwIl0sImV4cCI6MTc1MTk5Mzg5OCwiaWF0IjoxNzUxOTkyMDk4fQ.veQb44AcPIr1J0oxvhyaaCbrzo6gV-sMLM1xtRJDN_p3tOfR-lSwJTR8K5oqL-CbfJ9j_OTFkpHlEUeN3eFmVA"
                }
            }
        },
        "handlers.TokensResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJmaW5nZXJwcmludCI6IlBvc3RtYW5SdW50aW1lLzcuNDQuMSIsImlwIjoiMTcyLjE4LjAuMTo0NDU2OCIsIlBhaXJJZCI6IkZyRW5fX0o4UTlSc1djcVUiLCJpc3MiOiJhdXRoLmxvY2FsaG9zdDo4MDgwIiwic3ViIjoiMDFlY2ZlYWMtNTAwNi00YWYzLTg5NjEtZmI1ZDNkN2IxNDJmIiwiYXVkIjpbImxvY2FsaG9zdDo4MDgwIl0sImV4cCI6MTc1MTk5MzkwOCwiaWF0IjoxNzUxOTkyMTA4fQ.YA-Cp0iNzeWwX4Z7zRllpq8tIOpE5KIJWuFpU5u49sRtPdHkLFGLAul744APJe5UZ0fnUuc8yfWpCLiNRCtogw"
                },
                "message": {
                    "type": "string",
                    "example": "Токены обновлены"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "MDE5N2VhZGUtMDQ3NC03MDE4LWJlMmYtMGUxMzliMTY0M2Ex"
                }
            }
        },
        "handlers.WebhookResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiTokenAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Тестовое задание для API сервиса аутентификации",
	Description:      "API server for auth tokens",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
